{"version":3,"sources":["/Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src async","/Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/app.component.html","/Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/app.component.ts","/Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/app.module.ts","/Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/common/toastr.service.ts","/Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/expense/expense.component.html","/Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/expense/expense.component.ts","/Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/expense/expense.module.ts","/Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/expense/expense.service.ts","/Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/expense/report.component.html","/Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/expense/report.component.ts","/Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/expense/viewexpense.component.html","/Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/expense/viewexpense.component.ts","/Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/home/about.component.html","/Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/home/about.component.ts","/Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/home/login.component.html","/Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/home/login.component.ts","/Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/user/auth-guard.service.ts","/Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/user/auth.service.ts","/Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/user/logout.component.ts","/Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/user/password.component.html","/Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/user/password.component.ts","/Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/user/profile.component.html","/Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/user/profile.component.ts","/Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/user/register.component.html","/Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/user/register.component.ts","/Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/user/user.module.ts","/Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/user/user.service.ts","/Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/environments/environment.ts","/Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","module.exports = \"<!-- Fixed navbar -->\\n\\n<nav class=\\\"navbar navbar-default navbar-fixed-top\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"navbar-header\\\">\\n            <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbar\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"navbar\\\">\\n                <span class=\\\"sr-only\\\">Toggle navigation</span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n            </button>\\n            <a class=\\\"navbar-brand\\\" *ngIf=\\\"!authService.isLoggedIn()\\\" routerLink=\\\"login\\\">Expense Tracker Application</a>\\n            <a class=\\\"navbar-brand\\\" *ngIf=\\\"authService.isLoggedIn()\\\" routerLink=\\\"report\\\">Expense Tracker Application</a>\\n        </div>\\n        <div id=\\\"navbar\\\" class=\\\"collapse navbar-collapse\\\">\\n            <ul class=\\\"nav navbar-nav\\\">\\n\\n                <li ><a routerLink=\\\"report\\\" routerLinkActive=\\\"active\\\">Generate Report</a></li>\\n                <li><a routerLink=\\\"expense\\\" routerLinkActive=\\\"active\\\">Add new Expense</a></li>\\n                <li><a routerLink=\\\"about\\\" routerLinkActive=\\\"active\\\">About</a></li>\\n            </ul>\\n            <ul class=\\\"nav navbar-nav navbar-right\\\">\\n                <li *ngIf=\\\"!authService.isLoggedIn()\\\">\\n                    <a routerLink=\\\"login\\\" routerLinkActive=\\\"active\\\">Log In</a>\\n\\n                </li>\\n              <li *ngIf=\\\"!authService.isLoggedIn()\\\">\\n                <a [routerLink]=\\\"['/register']\\\">Register</a>\\n\\n              </li>\\n\\n\\n                <li *ngIf=\\\"authService.isLoggedIn()\\\">\\n\\n                  <!--<div class=\\\"dropdown\\\">-->\\n                    <!--<button class=\\\"btn btn-primary dropdown-toggle\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\">Welcome {{ authService.currentUser.firstname }}-->\\n                      <!--<span class=\\\"caret\\\"></span></button>-->\\n                    <!--<ul class=\\\"dropdown-menu\\\">-->\\n                      <!--<li routerLink=\\\"profile\\\">My Profile</li>-->\\n                      <!--<li routerLink=\\\"password\\\">Change Password</li>-->\\n                      <!--<li routerLink=\\\"logout\\\">Logout</li>-->\\n                    <!--</ul>-->\\n                  <!--</div>-->\\n\\n                    <ul class=\\\"menu\\\">\\n                        <li>\\n                            Welcome {{ authService.currentUser.firstname }}\\n                             <span class=\\\"caret\\\"></span>\\n                            <ul>\\n                                <li routerLink=\\\"profile\\\">My Profile</li>\\n\\n                                <li routerLink=\\\"password\\\">Change Password</li>\\n\\n                                <li routerLink=\\\"logout\\\">Logout</li>\\n                            </ul>\\n                        </li>\\n                    </ul>\\n                </li>\\n            </ul>\\n        </div>\\n    </div>\\n</nav>\\n\\n<router-outlet></router-outlet>\\n\\n<footer class=\\\"footer\\\">\\n    <div class=\\\"container\\\">\\n        <p class=\\\"text-muted\\\">&copy; Copyright 2017 |  MEAN app | Re-developed by Ramanath Madiwal</p>\\n    </div>\\n</footer>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","import { Component } from '@angular/core'\n\nimport { AuthService } from './user/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\n\nexport class AppComponent {\n  constructor( public authService: AuthService, ) {\n    \n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule } from '@angular/router';\nimport 'rxjs/Rx';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './home/login.component';\nimport { AboutComponent } from './home/about.component';\n\n/* Feature Modules */\nimport { UserModule } from './user/user.module';\nimport { ExpenseModule } from './expense/expense.module';\n\n/* common Modules */\nimport { ToastrService } from './common/toastr.service';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule,\n    UserModule,\n    ExpenseModule,\n    RouterModule.forRoot([\n        { path: 'login', component: LoginComponent},\n        { path: 'about', component: AboutComponent},\n        { path: '', redirectTo: 'login', pathMatch: 'full' },\n        { path: '**', redirectTo: 'login', pathMatch: 'full' }\n    ])\n  ],\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    AboutComponent,\n  ],\n  bootstrap: [AppComponent],\n  providers: [ToastrService]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/app.module.ts","import { Injectable } from '@angular/core'\n\ndeclare let toastr:any\n\n@Injectable()\n\nexport class ToastrService {\n    success(message: string, title?: string) {\n        toastr.success(message, title)\n    }\n    info(message: string, title?: string) {\n        toastr.info(message, title)\n    }\n    warning(message: string, title?: string) {\n        toastr.warning(message, title)\n    }\n    error(message: string, title?: string) {\n        toastr.error(message, title)\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/common/toastr.service.ts","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h1 style=\\\"color:white\\\">{{ pgTitle }} Expense</h1>\\n    </div>\\n\\n    <form [formGroup]=\\\"expenseForm\\\" (ngSubmit)=\\\"saveExpense(expenseForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': expenseForm.get('expdate').invalid && expenseForm.get('expdate').dirty}\\\">\\n            <label for=\\\"expdt\\\" class=\\\"col-sm-2 control-label\\\" style=\\\"color:white\\\">Date</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-calendar\\\"></i></div>\\n                <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"expdt\\\" [formControl]=\\\"expdate\\\" placeholder=\\\"yyyy-mm-dd\\\">\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"expenseForm.get('expdate').dirty && expenseForm.get('expdate').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"expenseForm.get('expdate').errors.required\\\">\\n                    Please enter date\\n                </span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"expenseForm.get('expdate').errors.pattern\\\">\\n                    Please enter a valid date\\n                </span>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': expenseForm.get('expaccount').invalid && expenseForm.get('expaccount').dirty}\\\">\\n            <label for=\\\"exptyp\\\" class=\\\"col-sm-2 control-label\\\" style=\\\"color:white\\\">Account</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                <select class=\\\"form-control\\\" [formControl]=\\\"expaccount\\\">\\n                    <option></option>\\n                    <option *ngFor=\\\"let a of acc\\\" >{{a}}</option>\\n                </select>\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"expenseForm.get('expaccount').dirty && expenseForm.get('expaccount').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"expenseForm.get('expaccount').errors.required\\\">\\n                    Please select expense account\\n                </span>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': expenseForm.get('expamt').invalid && expenseForm.get('expamt').dirty}\\\">\\n            <label for=\\\"expamt\\\" class=\\\"col-sm-2 control-label\\\" style=\\\"color:white\\\">Amount</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\">$</div>\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"expamt\\\" [formControl]=\\\"expamt\\\" placeholder=\\\"Enter amount\\\">\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"expenseForm.get('expamt').dirty && expenseForm.get('expamt').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"expenseForm.get('expamt').errors.required\\\">\\n                    Please enter amount\\n                </span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"expenseForm.get('expamt').errors.pattern\\\">\\n                    Please enter a valid amount\\n                </span>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"expdesc\\\" class=\\\"col-sm-2 control-label\\\" style=\\\"color:white\\\">Description</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <textarea class=\\\"form-control\\\" id=\\\"expdesc\\\" rows=\\\"3\\\" [formControl]=\\\"expdesc\\\" placeholder=\\\"Description\\\"></textarea>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\"></label>\\n            <div class=\\\"col-sm-10\\\">\\n                <button type=\\\"submit\\\" [disabled]=\\\"expenseForm.invalid\\\" class=\\\"btn btn-primary\\\">{{ btnLbl }}</button>\\n                <button type=\\\"reset\\\" class=\\\"btn btn-default\\\">Cancel</button>\\n                <button type=\\\"reset\\\" class=\\\"btn btn-default\\\" *ngIf=\\\"btnLbl == 'Update'\\\" (click)=\\\"onBack()\\\">Back</button>\\n            </div>\\n        </div>\\n    </form>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/expense/expense.component.html\n// module id = ../../../../../src/app/expense/expense.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../common/toastr.service'\nimport { ExpenseService } from './expense.service';\nimport { AuthService } from '../user/auth.service';\n\n@Component({\n  templateUrl: './expense.component.html'\n})\n\nexport class ExpenseComponent implements OnInit {\n  \n  expenseForm: FormGroup;\n  userObj: any;\n  acc: any = ['Food', 'Fees', 'Rent', 'Fare', 'Travel', 'Hotel', 'Phone', 'Internet', 'Repairs', 'Gas', 'Doctor', 'Books', 'Gift', 'Restaurant', 'Electricity', 'Other'];\n  expid: string;\n  pgTitle: string;\n  btnLbl: string;\n\n  constructor(private fb: FormBuilder, \n    private authService: AuthService,\n    private expenseService: ExpenseService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe) {\n  }\n\n  expdate = new FormControl('', [Validators.required]);\n  expaccount = new FormControl('', [Validators.required]);\n  expamt = new FormControl('', [Validators.required, Validators.pattern('[0-9]+(\\.[0-9][0-9]?)?')]);\n  expdesc = new FormControl();\n\n  ngOnInit(){\n    \n    this.route.params.subscribe((params: any) => {\n      if (params.id) {\n        this.expid = params['id'];\n        this.getExpense(this.expid);\n        this.pgTitle = \"Edit\";\n        this.btnLbl = \"Update\"\n      } else {\n        this.pgTitle = \"Add\";\n        this.btnLbl = \"Submit\"\n      }\n    });\n    \n    this.userObj =  this.authService.currentUser;\n    this.expenseForm = this.fb.group({\n      expdate: this.expdate,\n      expaccount: this.expaccount,\n      expamt: this.expamt,\n      expdesc: this.expdesc\n    });\n  }\n\n  getExpense(id){\n    this.expenseService.getExpense(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.populateForm(data.data[0]);\n        } else {\n          this.toastr.error('Expense id is incorrect in the URL');\n          this.router.navigate(['report']);\n        }\n      }\n    });\n  }\n\n  populateForm(data): void {\n    this.expenseForm.patchValue({\n      expdate: this.datePipe.transform(data.expensedate, 'y-MM-dd'),\n      expaccount: data.expensetype,\n      expamt: data.expenseamt,\n      expdesc: data.expensedesc\n    });\n  }\n\n  saveExpense(formdata:any): void {\n    if (this.expenseForm.valid) {\n      const theForm = this.expenseForm.value;\n      if (this.expid !== '') {\n        theForm.expid = this.expid;\n      }\n      \n      this.expenseService.saveExpense(this.userObj.userid,theForm)\n        .subscribe(data => {\n          if (data.success === false) {\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.toastr.success(data.message);\n          }\n          if (!this.expid) {\n            this.expenseForm.reset();\n          }\n      });\n    }\n  }\n\n  onBack(): void {\n    this.router.navigate(['/report'], { preserveQueryParams: true });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/expense/expense.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule} from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DatePipe } from '@angular/common';\n\nimport { ReportComponent } from './report.component';\nimport { ExpenseComponent } from './expense.component';\nimport { ViewexpenseComponent } from './viewexpense.component';\nimport { AuthGuard } from '../user/auth-guard.service';\nimport { AuthService } from '../user/auth.service';\nimport { ExpenseService } from './expense.service';\n\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild([\n      { path: 'report', canActivate: [ AuthGuard], component: ReportComponent },\n      { path: 'expense', canActivate: [ AuthGuard], component: ExpenseComponent },\n      { path: 'expense/:id', canActivate: [ AuthGuard], component: ExpenseComponent },\n      { path: 'expense/view/:id', canActivate: [ AuthGuard], component: ViewexpenseComponent }\n    ])\n  ],\n  declarations: [\n    ReportComponent,\n    ExpenseComponent,\n    ViewexpenseComponent\n  ],\n  providers: [\n    DatePipe,\n    AuthService,\n    AuthGuard,\n    ExpenseService\n  ]\n})\nexport class ExpenseModule {}\n\n\n// WEBPACK FOOTER //\n// /Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/expense/expense.module.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions} from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/throw';\n\n\n@Injectable()\nexport class ExpenseService {\n    public appdomain: string ='http://localhost:1978';\n    public jwtToken: string;\n\n    constructor(private http: Http) {\n        const theUser:any = JSON.parse(localStorage.getItem('currentUser'));\n        if (theUser) {\n            this.jwtToken = theUser.token;\n        }\n    }\n\n    saveExpense(userid, oExpense){\n        let headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Authorization', `${this.jwtToken}`);\n        let options = new RequestOptions({ headers: headers });\n                                      //CHANGE IN DEVELOPMENT MODE   !!!!!!!!!!!!!!!\n        // return this.http.post(`http://localhost:1978/api/expense/${userid}`, JSON.stringify(oExpense), options)\n        //     .map((response: Response) => response.json())\n        //     .catch(this.handleError);\n\n      return this.http.post(`/api/expense/${userid}`, JSON.stringify(oExpense), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n    }\n\n    getExpenses(userid, oExpense) {\n        let headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Authorization', `${this.jwtToken}`);\n        let options = new RequestOptions({ headers: headers });\n\n        // return this.http.post(`http://localhost:1978/api/expense/report/${userid}`, JSON.stringify(oExpense), options)\n        //     .map((response: Response) => response.json())\n        //     .catch(this.handleError);\n      return this.http.post(`/api/expense/report/${userid}`, JSON.stringify(oExpense), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n    }\n\n    getExpenseTotal(userid, oExpense) {\n        let headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Authorization', `${this.jwtToken}`);\n        let options = new RequestOptions({ headers: headers });\n\n        // return this.http.post(`http://localhost:1978/api/expense/total/${userid}`, JSON.stringify(oExpense), options)\n        //     .map((response: Response) => response.json())\n        //     .catch(this.handleError);\n      return this.http.post(`/api/expense/total/${userid}`, JSON.stringify(oExpense), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n    }\n\n    getExpense(expid) {\n        let headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Authorization', `${this.jwtToken}`);\n        let options = new RequestOptions({ headers: headers });\n\n        // return this.http.get(`http://localhost:1978/api/expense/${expid}`, options)\n        //     .map((response: Response) => response.json())\n        //     .catch(this.handleError);\n      return this.http.get(`/api/expense/${expid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n    }\n\n    delExpense(expid) {\n        let headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Authorization', `${this.jwtToken}`);\n        let options = new RequestOptions({ headers: headers });\n\n        // return this.http.delete(`http://localhost:1978/api/expense/${expid}`, options)\n        //     .map((response: Response) => response.json())\n        //     .catch(this.handleError);heroku\n\n      return this.http.delete(`/api/expense/${expid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n    }\n\n     private handleError(error: Response) {\n        console.error(error);\n        return Observable.throw(error.json().error || 'Server error');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/expense/expense.service.ts","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h1>Expense Report</h1>\\n    </div>\\n\\n    <div class=\\\"panel panel-info\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\">Show report</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n            <form [formGroup]=\\\"reportForm\\\" (ngSubmit)=\\\"getReport(reportForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-sm-12 col-md-12\\\">\\n                    <table class=\\\"table\\\">\\n                      <thead>\\n                      <tr>\\n                        <th>TimeLine</th>\\n                        <th>Selection</th>\\n\\n                      </tr>\\n                      </thead>\\n                      <tbody>\\n                      <tr class=\\\"success\\\">\\n                        <td>\\n                          Current month\\n                        </td>\\n                        <td> <span><input type=\\\"radio\\\" name=\\\"report\\\" value=\\\"opt1\\\" [formControl]=\\\"report\\\" checked></span></td>\\n\\n                      </tr>\\n                      <tr class=\\\"info\\\">\\n                        <td> Date Range</td>\\n                        <td><span><input type=\\\"radio\\\" name=\\\"report\\\" value=\\\"opt2\\\" [formControl]=\\\"report\\\"></span></td>\\n                      </tr>\\n                      <tr class=\\\"info\\\">\\n                        <td>Start Date</td>\\n                        <td>\\n\\n                          <!--<div class=\\\"col-sm-12 col-md-6\\\">-->\\n                          <div class=\\\"form-group\\\" style=\\\"margin-right:0\\\" [ngClass]=\\\"{'has-error': reportForm.get('startdt').invalid && reportForm.get('startdt').dirty}\\\">\\n                            <div class=\\\"input-group\\\">\\n                              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-calendar\\\"></i></div>\\n                              <input type=\\\"date\\\" class=\\\"form-control\\\" [formControl]=\\\"startdt\\\" placeholder=\\\"Start Date\\\">\\n                            </div>\\n                            <div class=\\\"text-danger\\\" *ngIf=\\\"reportForm.get('startdt').dirty && reportForm.get('startdt').invalid\\\">\\n                              <span class=\\\"col-sm-2\\\"></span>\\n                              <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter start date</span>\\n                            </div>\\n                            <!--</div>-->\\n                          </div>\\n                          <!--<div class=\\\"col-sm-12 col-md-6\\\">-->\\n\\n                       </td>\\n\\n\\n                      </tr>\\n                      <tr class=\\\"info\\\">\\n                        <td>End Date</td>\\n                        <td><div class=\\\"form-group\\\" style=\\\"margin-right:0\\\" [ngClass]=\\\"{'has-error': reportForm.get('enddt').invalid && reportForm.get('enddt').dirty}\\\">\\n                          <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-calendar\\\"></i></div>\\n                            <input type=\\\"date\\\" class=\\\"form-control\\\" [formControl]=\\\"enddt\\\" placeholder=\\\"End Date\\\">\\n                          </div>\\n                          <div class=\\\"text-danger\\\" *ngIf=\\\"reportForm.get('enddt').dirty && reportForm.get('enddt').invalid\\\">\\n                            <span class=\\\"col-sm-2\\\"></span>\\n                            <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter end date</span>\\n                          </div>\\n                          <!--</div>-->\\n                        </div></td>\\n                      </tr>\\n                      <tr class=\\\"warning\\\">\\n                        <td>All</td>\\n                        <td><input type=\\\"radio\\\" name=\\\"report\\\" value=\\\"opt3\\\" [formControl]=\\\"report\\\"></td>\\n                      </tr>\\n                      </tbody>\\n                    </table>\\n                    <div class=\\\"col-sm-12 col-md-2\\\">\\n                      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"reportForm.invalid\\\">Submit</button>\\n                    </div>\\n                  </div>\\n\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"panel panel-danger\\\" *ngIf=\\\"expenses && totalrows < 1\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\">No expense found</h3>\\n        </div>\\n\\n        <div class=\\\"panel-body\\\">\\n            It seems like you haven't entered any expense for the selected criteria. Please enter you expenses <a routerLink=\\\"/expense\\\">here</a>.\\n        </div>\\n    </div>\\n\\n\\n    <div class=\\\"panel panel-default\\\" *ngIf=\\\"expenses && totalrows > 0\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\">Expense report <i>{{reportTitle}}</i> <b>({{ exptotal?.total | currency: 'INR':true }})</b></h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n            <div class=\\\"table-responsive\\\">\\n                <table class=\\\"table table-striped\\\">\\n                    <thead>\\n                        <tr>\\n                            <th width=\\\"10%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortExpense('expensedate')\\\">Date</a></th>\\n                            <th width=\\\"20%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortExpense('expensetype')\\\">Account</a></th>\\n                            <th width=\\\"40%\\\">Description</th>\\n                            <th width=\\\"10%\\\" class=\\\"text-right\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortExpense('expenseamt')\\\">Amount</a></th>\\n                            <th width=\\\"10%\\\">Action</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor='let exp of expenses; let expIndex = index'>\\n                            <td>{{ exp.expensedate | date: 'd MMM y'}}</td>\\n                            <td>{{ exp.expensetype}}</td>\\n                            <td>{{ exp.expensedesc}}</td>\\n                            <td class=\\\"text-right\\\">{{ exp.expenseamt | currency: 'INR':true }}</td>\\n                            <td>\\n                                <button type=\\\"button\\\" class=\\\"btn-xs btn-info\\\" aria-label=\\\"View\\\" (click)=\\\"showExpense(exp._id)\\\">\\n                                    <span class=\\\"glyphicon glyphicon-eye-open\\\" aria-hidden=\\\"true\\\"></span>\\n                                </button>\\n                                <button type=\\\"button\\\" class=\\\"btn-xs btn-danger\\\" aria-label=\\\"Edit\\\" (click)=\\\"editExpense(exp._id)\\\">\\n                                    <span class=\\\"glyphicon glyphicon-pencil\\\" aria-hidden=\\\"true\\\"></span>\\n                                </button>\\n                                <button type=\\\"button\\\" class=\\\"btn-xs btn-primary\\\" aria-label=\\\"Delete\\\" (click)=\\\"confirmDel(expIndex, exp._id)\\\">\\n                                    <span class=\\\"glyphicon glyphicon-trash\\\" aria-hidden=\\\"true\\\"></span>\\n                                </button>\\n                            </td>\\n                        </tr>\\n\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <div style=\\\"text-align:center\\\" *ngIf=\\\"expenses && totalrows > 10\\\">\\n                <nav aria-label=\\\"Page navigation\\\">\\n                    <ul class=\\\"pagination\\\">\\n                        <li *ngFor=\\\"let item of createPager(pgCounter); let idx = index\\\">\\n                            <a [ngClass]=\\\"{'selected': qpage == idx + 1 }\\\"class=\\\"selected\\\" style=\\\"cursor:pointer\\\" (click) = \\\"setPage(idx + 1)\\\">{{ idx + 1 }}</a>\\n                        </li>\\n                    </ul>\\n                </nav>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/expense/report.component.html\n// module id = ../../../../../src/app/expense/report.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../common/toastr.service'\nimport { ExpenseService } from './expense.service';\nimport { AuthService } from '../user/auth.service';\nimport { IExpense } from './expense';\n\n@Component({\n  templateUrl: './report.component.html'\n})\n\nexport class ReportComponent implements OnInit {\n\n  reportForm: FormGroup\n  userObj: any;\n  reportTitle: string;\n  expenses: IExpense[];\n  totalrows: number;\n  pgCounter: number;\n  qreport: string;\n  qstartdt: string;\n  qenddt: string;\n  qpage: number;\n  qsort: string;\n  exptotal: number;\n  \n  constructor(private fb: FormBuilder, \n    private authService: AuthService,\n    private expenseService: ExpenseService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe) {\n  }\n\n  report = new FormControl('opt1');\n  startdt = new FormControl({value: '', disabled: true});\n  enddt = new FormControl({value: '', disabled: true});\n\n  ngOnInit(){\n    this.userObj =  this.authService.currentUser;\n    this.reportForm = this.fb.group({\n      report: this.report,\n      startdt: this.startdt,\n      enddt: this.enddt\n    });\n\n    this.route.queryParams.forEach((params: Params) => {\n      this.qreport = params['report'] || '';\n      this.qstartdt = params['startdt'] || '';\n      this.qenddt = params['enddt'] || '';\n      this.qpage = params['page'] || '';\n      this.qsort = params['sortby'] || '';\n\n      if(this.qreport !== '') {\n        let payload: any = {};\n        payload.report = this.qreport;\n        if( (this.qstartdt !== '' && this.qenddt !== '')){\n          payload.startdt = this.qstartdt;\n          payload.enddt = this.qenddt;\n\n          this.reportForm.get('startdt').enable();\n          this.reportForm.get('enddt').enable();\n        }\n        payload.page = this.qpage;\n        payload.sortby = this.qsort;\n        this.fetchReport(this.userObj.userid, payload);\n\n        this.reportForm.patchValue({\n          report: this.qreport,\n          startdt: this.qstartdt,\n          enddt: this.qenddt\n        });\n      }\n    })\n\n    this.reportForm.get('report').valueChanges\n      .subscribe(value => this.toggleDates(value));\n  }\n\n  toggleDates(opt: string): void {\n    const dt1Control = this.reportForm.get('startdt');\n    const dt2Control = this.reportForm.get('enddt');\n    if (opt === 'opt2') {\n      dt1Control.setValidators(Validators.required);\n      dt2Control.setValidators(Validators.required);\n      dt1Control.enable();\n      dt2Control.enable();\n    } else {\n      dt1Control.clearValidators();\n      dt2Control.clearValidators();\n      dt1Control.disable();\n      dt2Control.disable();\n      dt1Control.setValue('');\n      dt2Control.setValue('');\n    }\n    dt1Control.updateValueAndValidity();\n    dt2Control.updateValueAndValidity();\n  }\n\n  getReport(formdata:any): void {\n    if (this.reportForm.valid) {\n      if (this.reportForm.value.report === 'opt2' && (new Date(this.reportForm.value.startdt) > new Date(this.reportForm.value.enddt))){\n        this.toastr.error('Start date cannot be greater than end date.');\n      } else {\n        this.fetchReport(this.userObj.userid, this.reportForm.value);\n      }\n    }\n  }\n\n  fetchReport(userid, formval) {\n    this.expenseService.getExpenses(userid, formval)\n    .subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.expenses = data.data.docs;\n        this.totalrows = +data.data.total;\n        this.pgCounter = Math.floor((this.totalrows + 10 - 1) / 10);\n        \n        this.qreport = formval.report;\n        if (formval.startdt){\n          this.qstartdt = formval.startdt;\n          this.qenddt = formval.enddt;\n        }\n        \n        this.expenseService.getExpenseTotal(userid, formval)\n        .subscribe(data => {\n          this.exptotal = data.data[0];\n        });\n\n        if (formval.report === 'opt1') {\n          this.reportTitle = 'for ' + this.datePipe.transform(new Date(), 'MMM y');\n        } else if (formval.report === 'opt2') {\n            this.reportTitle = 'between ' + this.datePipe.transform(new Date(formval.startdt), 'd MMM y') + ' and ' + this.datePipe.transform(new Date(formval.enddt), 'd MMM y');\n        } else {\n          this.reportTitle = 'for all expenses'\n        }\n      }\n    });\n  }\n\n  setPage(page): void {\n    this.router.navigate(['report'],\n      {\n        queryParams: { report: this.qreport, startdt: this.qstartdt, enddt: this.qenddt, page: page, sortby: this.qsort }\n      }\n    );\n  }\n\n  createPager(number) {\n    var items: number[] = [];\n    for(var i = 1; i <= number; i++){\n      items.push(i);\n    }\n    return items;\n  }\n\n  showExpense(expid): void {\n    this.router.navigate([`expense/view/${expid}`],\n      {\n        queryParams: { report: this.qreport, startdt: this.qstartdt, enddt: this.qenddt, page: this.qpage || 1, sortby: this.qsort }\n      }\n    );\n  }\n\n  confirmDel(idx: number, expid: string) {\n    if(confirm('Do you really want to delete this record?')){\n      this.expenseService.delExpense(expid)\n      .subscribe(data => {\n        if (data.success === false) {\n          if (data.errcode){\n            this.authService.logout();\n            this.router.navigate(['login']);\n          }\n          this.toastr.error(data.message);\n        } else {\n          \n          this.expenses.splice(idx, 1);\n          \n          this.toastr.success(data.message);\n        }\n      });\n    }\n  }\n\n  editExpense(expid): void {\n    this.router.navigate([`expense/${expid}`],\n      {\n        queryParams: { report: this.qreport, startdt: this.qstartdt, enddt: this.qenddt, page: this.qpage || 1, sortby: this.qsort }\n      }\n    );\n  }\n\n  sortExpense(sortby): void {\n    if (this.qsort === ''){\n      this.qsort = sortby;\n    } else if (this.qsort.indexOf('-') > -1 ) {\n      this.qsort = sortby;\n    } else {\n      this.qsort = '-' + sortby;\n    }\n  \n    this.router.navigate(['report'],\n      {\n        queryParams: { report: this.qreport, startdt: this.qstartdt, enddt: this.qenddt, page: this.qpage || 1, sortby: this.qsort }\n      }\n    );\n  }\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/expense/report.component.ts","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h1 style=\\\"color:white\\\">View Expense</h1>\\n    </div>\\n    <form class=\\\"form-horizontal\\\">\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"expdt\\\" class=\\\"col-sm-2 control-label\\\" style=\\\"color:white\\\">Date</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-calendar\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ expense?.expensedate | date: 'd MMM y' }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"exptyp\\\" class=\\\"col-sm-2 control-label\\\" style=\\\"color:white\\\">Account</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ expense?.expensetype }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"expamt\\\" class=\\\"col-sm-2 control-label\\\" style=\\\"color:white\\\">Amount</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\">$</div>\\n                <div class=\\\"form-ele\\\">{{ expense?.expenseamt | currency: 'USD':true }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"expdesc\\\" class=\\\"col-sm-2 control-label\\\" style=\\\"color:white\\\">Description</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"form-ele\\\">{{ expense?.expensedesc }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\"></label>\\n            <div class=\\\"col-sm-10\\\">\\n                <button type=\\\"button\\\" (click)=\\\"onBack()\\\" class=\\\"btn btn-default\\\">Back</button>\\n            </div>\\n        </div>\\n    </form>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/expense/viewexpense.component.html\n// module id = ../../../../../src/app/expense/viewexpense.component.html\n// module chunks = 1","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ExpenseService } from './expense.service';\nimport { AuthService } from '../user/auth.service';\nimport { ToastrService } from '../common/toastr.service';\nimport { Subscription } from 'rxjs/Subscription';\nimport { IExpense } from './expense';\n\n@Component({\n  templateUrl: './viewexpense.component.html'\n})\n\nexport class ViewexpenseComponent implements OnInit, OnDestroy {\n  \n  expense: IExpense;\n  private sub: Subscription;\n\n  constructor(\n    private authService: AuthService,\n    private expenseService: ExpenseService,\n    private toastr: ToastrService,\n    private route: ActivatedRoute,\n    private router: Router) {\n  }\n\n  ngOnInit(): void {\n    this.sub = this.route.params.subscribe(\n      params => {\n        let id = params['id'];\n        this.getExpense(id);\n      });\n    }\n\n    ngOnDestroy() {\n      this.sub.unsubscribe();\n    }\n\n    getExpense(id){\n      this.expenseService.getExpense(id).subscribe(data => {\n        if (data.success === false) {\n          if (data.errcode){\n            this.authService.logout();\n            this.router.navigate(['login']);\n          }\n          this.toastr.error(data.message);\n        } else {\n          if (data.data[0]) {\n            this.expense = data.data[0];\n          } else {\n            this.toastr.error('Expense id is incorrect in the URL');\n          }\n          \n        }\n      });\n    }\n    \n    onBack(): void {\n        this.router.navigate(['/report'], { preserveQueryParams: true });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/expense/viewexpense.component.ts","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h1>About</h1>\\n    </div>\\n\\n    <div class=\\\"jumbotron\\\">\\n        <h1>Expense Tracker Application</h1>\\n        <p>A  MEAN application which performs CRUD operations!</p>\\n    </div>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/home/about.component.html\n// module id = ../../../../../src/app/home/about.component.html\n// module chunks = 1","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: './about.component.html'\n})\n\nexport class AboutComponent {\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/home/about.component.ts","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n\\n    <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"loginUser(loginForm.value)\\\" class=\\\"form-signin\\\" novalidate autocomplete=\\\"off\\\">\\n        <h2>Please sign in</h2>\\n        <label for=\\\"inputUser\\\" class=\\\"sr-only\\\">Username</label>\\n        <input type=\\\"text\\\" id=\\\"inputUser\\\" class=\\\"form-control\\\" [formControl]=\\\"username\\\" placeholder=\\\"Username\\\" autofocus>\\n        <div class=\\\"text-danger\\\" *ngIf=\\\"loginForm.get('username').dirty && loginForm.get('username').invalid\\\">\\n            Please enter username\\n        </div>\\n      <hr>\\n        <label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Password</label>\\n        <input type=\\\"password\\\" id=\\\"inputPassword\\\" class=\\\"form-control\\\" [formControl]=\\\"password\\\" placeholder=\\\"Password\\\">\\n        <div class=\\\"text-danger\\\" *ngIf=\\\"loginForm.get('password').dirty && loginForm.get('password').invalid\\\">\\n            Please enter password\\n        </div>\\n        <br><br>\\n        <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"loginForm.invalid\\\" >Sign in</button>\\n        <br>\\n        <!--<div class=\\\"row\\\">-->\\n            <!--<div class=\\\"col-md-6 col-sm-6 col-xs-6\\\" style=\\\"color:white\\\">Forgot Password</div>-->\\n\\n        <!--</div>-->\\n    </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/home/login.component.html\n// module id = ../../../../../src/app/home/login.component.html\n// module chunks = 1","import { Component } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from '../common/toastr.service'\nimport { AuthService } from '../user/auth.service';\n\n@Component({\n  templateUrl: './login.component.html'\n})\n\nexport class LoginComponent {\n\n  constructor(private fb: FormBuilder, \n    private authService: AuthService,\n    private router: Router,\n    private toastr: ToastrService) {\n  }\n\n  username = new FormControl('', [Validators.required]);\n  password = new FormControl('', [Validators.required]);\n\n  loginForm: FormGroup = this.fb.group({\n    username: this.username,\n    password: this.password,\n  });\n\n\n  loginUser(formdata:any): void {\n    if (this.loginForm.dirty && this.loginForm.valid) {\n      this.authService.login(this.loginForm.value)\n        .subscribe(data => {\n          if (data.json().success === false) {\n            this.toastr.error(data.json().message);\n          } else {\n            this.toastr.success('Login successful.');\n            this.router.navigate(['report']);\n          }\n          this.loginForm.reset();\n        });\n    }\n  }\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/home/login.component.ts","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Router, CanActivate } from '@angular/router';\n\nimport { AuthService } from './auth.service';\nimport { ToastrService } from '../common/toastr.service';\n\n@Injectable()\nexport  class AuthGuard implements CanActivate {\n\n    constructor(private authService: AuthService,\n                private router: Router,\n                private toastr: ToastrService) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        return this.checkLoggedIn(state.url);\n    }\n\n    checkLoggedIn(url: string): boolean {\n        if (this.authService.isLoggedIn()) {\n            return true;\n        }\n\n        this.toastr.info(\"Please login to access this page.\")\n        this.router.navigate(['/login']);\n        return false;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/user/auth-guard.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions} from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/throw';\n\n\nimport { IUser } from './user';\n\n@Injectable()\nexport class AuthService {\n\n    public currentUser: IUser;\n\n    constructor(private http: Http) {}\n\n    isLoggedIn(): boolean {\n        try {\n            const theUser:any = JSON.parse(localStorage.getItem('currentUser'));\n            if (theUser) {\n                this.currentUser = theUser.user;\n            }\n        } catch (e) {\n            return false;\n        }\n\n        return !!this.currentUser;\n    }\n\n    login(oUser) {\n        let headers = new Headers({ 'Content-Type': 'application/json'});\n        let options = new RequestOptions({headers: headers});\n                               //CHANGE IN DEVELOPMENT MODE TO LOCALHOST!!!!\n        // return this.http.post('http://localhost:1978/api/login', JSON.stringify(oUser), options)\n      return this.http.post('/api/login', JSON.stringify(oUser), options)\n        .do((response: Response) => {\n            if (response.json().success) {\n                this.currentUser = <IUser>response.json().message;\n                let userObj: any = {};\n                userObj.user = response.json().message;\n                userObj.token = response.json().token;\n\n                localStorage.setItem('currentUser', JSON.stringify(userObj));\n            }\n            response.json();\n        })\n        .catch(this.handleError);\n    }\n\n    logout(): void {\n        this.currentUser = null;\n        localStorage.removeItem('currentUser');\n    }\n\n     private handleError(error: Response) {\n        console.error(error);\n        return Observable.throw(error.json().error || 'Server error');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/user/auth.service.ts","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from '../common/toastr.service'\nimport { AuthService } from '../user/auth.service';\n\n@Component({\n  template: ''\n})\n\nexport class LogoutComponent implements OnInit {\n  \n    constructor(private authService: AuthService,\n        private router: Router,\n        private toastr: ToastrService) { \n    }\n\n    ngOnInit(){\n        this.authService.logout();\n        this.toastr.success('You have been logged out.');\n        this.router.navigate(['login']);\n    }\n\n    \n\n}\n\n\n// WEBPACK FOOTER //\n// /Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/user/logout.component.ts","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h1>Change Password</h1>\\n    </div>\\n\\n    <form [formGroup]=\\\"passwordForm\\\" (ngSubmit)=\\\"updatePassword(passwordForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': passwordForm.get('oldpassword').invalid && passwordForm.get('oldpassword').dirty}\\\">\\n            <label for=\\\"oldpassword\\\" class=\\\"col-sm-2 control-label\\\" style=\\\"color:white\\\">Existing Password</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-lock\\\"></i></div>\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"oldpassword\\\" [formControl]=\\\"oldpassword\\\" placeholder=\\\"Existing Password\\\">\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"passwordForm.get('oldpassword').dirty && passwordForm.get('oldpassword').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"passwordForm.get('oldpassword').errors.required\\\">\\n                    Please enter existing password\\n                </span>\\n            </div>\\n        </div>\\n\\n        <div formGroupName=\\\"passwordGroup\\\" [ngClass]=\\\"{'has-error': passwordForm.get('passwordGroup').errors }\\\">\\n\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': passwordForm.get('passwordGroup.password').invalid && passwordForm.get('passwordGroup.password').dirty}\\\">\\n                <label for=\\\"password\\\" class=\\\"col-sm-2 control-label\\\" style=\\\"color:white\\\">New Password</label>\\n                <div class=\\\"input-group col-sm-10\\\">\\n                    <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-asterisk\\\"></i></div>\\n                    <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" [formControl]=\\\"password\\\" placeholder=\\\"New Pasword\\\">\\n                </div>\\n                <div class=\\\"text-danger\\\"  *ngIf=\\\"passwordForm.get('passwordGroup.password').dirty && passwordForm.get('passwordGroup.password').errors\\\">\\n                    <span class=\\\"col-sm-2\\\"></span>\\n                    <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"passwordForm.get('passwordGroup.password').errors.required\\\">\\n                        Please enter password\\n                    </span>\\n                    <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"passwordForm.get('passwordGroup.password').errors.pattern\\\">\\n                        Password must contain one letter, number & special characters\\n                    </span>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': passwordForm.get('passwordGroup.retypepass').invalid && passwordForm.get('passwordGroup.retypepass').dirty}\\\">\\n                <label for=\\\"retypepass\\\" class=\\\"col-sm-2 control-label\\\" style=\\\"color:white\\\">Retype Password <sup>*</sup></label>\\n                <div class=\\\"input-group col-sm-10\\\">\\n                    <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-asterisk\\\"></i></div>\\n                    <input type=\\\"password\\\" class=\\\"form-control\\\" [formControl]=\\\"retypepass\\\" id=\\\"retypepass\\\" placeholder=\\\"Retype Password\\\">\\n                </div>\\n                <div class=\\\"text-danger\\\" *ngIf=\\\"(passwordForm.get('passwordGroup.retypepass').touched || passwordForm.get('passwordGroup.retypepass').dirty) && (passwordForm.get('passwordGroup.retypepass').errors || passwordForm.get('passwordGroup').errors)\\\">\\n                    <span class=\\\"col-sm-2\\\"></span>\\n                    <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"passwordForm.get('passwordGroup.retypepass').errors?.required\\\">\\n                        Please confirm your password\\n                    </span>\\n                    <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"passwordForm.get('passwordGroup').errors?.mismatchedPassword\\\">\\n                        Password do not match\\n                    </span>\\n                </div>\\n            </div>\\n\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\"></label>\\n            <div class=\\\"col-sm-10\\\">\\n                <button type=\\\"submit\\\" [disabled]=\\\"passwordForm.invalid\\\" class=\\\"btn btn-primary\\\">Update</button>\\n                <button type=\\\"reset\\\" class=\\\"btn btn-default\\\">Cancel</button>\\n            </div>\\n        </div>\\n    </form>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/user/password.component.html\n// module id = ../../../../../src/app/user/password.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from '../common/toastr.service'\nimport { UserService } from '../user/user.service';\nimport { AuthService } from '../user/auth.service';\n\nfunction comparePassword(c: AbstractControl): {[key: string]: boolean} | null {\n    let passwordControl = c.get('password');\n    let confirmControl = c.get('retypepass');\n\n    if (passwordControl.pristine || confirmControl.pristine) {\n      return null;\n    }\n\n    if (passwordControl.value === confirmControl.value) {\n        return null;\n    }\n    return { 'mismatchedPassword': true };\n }\n\n@Component({\n  templateUrl: './password.component.html'\n})\n\nexport class PasswordComponent implements OnInit {\n\n  passwordForm: FormGroup;\n  userObj: any;\n\n  constructor(private fb: FormBuilder, \n    private authService: AuthService,\n    private userService: UserService,\n    private router: Router,\n    private toastr: ToastrService) {\n  }\n  \n  oldpassword = new FormControl('', [Validators.required]);\n  password = new FormControl('', [Validators.required, Validators.pattern('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{6,12}$')]);\n  retypepass = new FormControl('', [Validators.required]);\n\n  ngOnInit(){\n    this.userObj =  this.authService.currentUser;\n    this.passwordForm = this.fb.group({\n      oldpassword: this.oldpassword,\n      passwordGroup: this.fb.group({\n        password: this.password,\n        retypepass: this.retypepass,\n      }, {validator: comparePassword})\n    });\n  }\n\n  updatePassword(formdata:any): void {\n    if (this.passwordForm.dirty && this.passwordForm.valid) {\n      let theForm = this.passwordForm.value;\n      const thePass = this.passwordForm.value.passwordGroup.password;\n      theForm.password = thePass;\n      delete theForm.passwordGroup;\n\n      this.userService.updatePassword(this.userObj.userid,theForm)\n        .subscribe(data => {\n          if (data.success === false) {\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.toastr.success(data.message);\n          }\n          this.passwordForm.reset();\n      });\n    }\n  }\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/user/password.component.ts","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h1>My Profile</h1>\\n    </div>\\n\\n    <form [formGroup]=\\\"profileForm\\\" (ngSubmit)=\\\"updateUser(profileForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"username\\\" class=\\\"col-sm-2 control-label\\\" style=\\\"color:white\\\">Username</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-user\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ userObj.username }}</div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': profileForm.get('firstname').invalid && profileForm.get('firstname').dirty}\\\">\\n            <label for=\\\"fname\\\" class=\\\"col-sm-2 control-label\\\" style=\\\"color:white\\\">First Name</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"fname\\\" [formControl]=\\\"firstname\\\" placeholder=\\\"First Name\\\">\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"profileForm.get('firstname').dirty && profileForm.get('firstname').invalid\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter your first name</span>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': profileForm.get('lastname').invalid && profileForm.get('lastname').dirty}\\\">\\n            <label for=\\\"lname\\\" class=\\\"col-sm-2 control-label\\\" style=\\\"color:white\\\">Last Name</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-bold\\\"></i></div>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lname\\\" [formControl]=\\\"lastname\\\" placeholder=\\\"Last Name\\\">\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"profileForm.get('lastname').dirty && profileForm.get('lastname').invalid\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter your last name</span>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': profileForm.get('email').invalid && profileForm.get('email').dirty}\\\">\\n            <label for=\\\"lname\\\" class=\\\"col-sm-2 control-label\\\" style=\\\"color:white\\\">Email</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\">@</div>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lname\\\" [formControl]=\\\"email\\\" placeholder=\\\"Email\\\">\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"profileForm.get('email').dirty && profileForm.get('email').invalid\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter a valid email</span>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"password\\\" class=\\\"col-sm-2 control-label\\\" style=\\\"color:white\\\">Last Login</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-calendar\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ userObj.lastlogin | date:'medium' }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\"></label>\\n            <div class=\\\"col-sm-10\\\">\\n                <button type=\\\"submit\\\" [disabled]=\\\"profileForm.invalid\\\" class=\\\"btn btn-primary\\\">Update</button>\\n                <button type=\\\"reset\\\" class=\\\"btn btn-default\\\">Cancel</button>\\n            </div>\\n        </div>\\n    </form>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/user/profile.component.html\n// module id = ../../../../../src/app/user/profile.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from '../common/toastr.service'\nimport { UserService } from '../user/user.service';\nimport { AuthService } from '../user/auth.service';\nimport { IUser } from './user';\n\n@Component({\n  templateUrl: './profile.component.html'\n})\n\nexport class ProfileComponent implements OnInit {\n\n  profileForm: FormGroup\n  userObj: any;\n  user: IUser;\n  \n  constructor(private fb: FormBuilder, \n    private authService: AuthService,\n    private userService: UserService,\n    private router: Router,\n    private toastr: ToastrService) {\n  }\n\n  firstname = new FormControl('', [Validators.required]);\n  lastname = new FormControl('', [Validators.required]);\n  email = new FormControl('', [Validators.email]);\n\n  ngOnInit(){\n    this.userObj =  this.authService.currentUser;\n    this.profileForm = this.fb.group({\n      firstname: this.firstname,\n      lastname: this.lastname,\n      email: this.email\n    });\n\n    this.userService.getUser(this.userObj.userid).subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.user = data.data[0];\n        this.populateForm(this.user);\n      }\n    });\n  }\n\n  populateForm(data): void {\n    this.profileForm.patchValue({\n      firstname: data.firstname,\n      lastname: data.lastname,\n      email: data.email,\n    });\n  }\n\n  updateUser(formdata:any): void {\n    if (this.profileForm.dirty && this.profileForm.valid) {\n      this.userService.updateUser(this.userObj.userid, this.profileForm.value)\n        .subscribe(data => {\n          if (data.success === false) {\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.toastr.success(data.message);\n            let theUser:any = JSON.parse(localStorage.getItem('currentUser'));\n            theUser.user.firstname = this.profileForm.value.firstname;\n            localStorage.setItem('currentUser', JSON.stringify(theUser));\n          }\n      });\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/user/profile.component.ts","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h1>Register</h1>\\n    </div>\\n\\n    <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"registerUser(registerForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('firstname').invalid && registerForm.get('firstname').dirty}\\\">\\n            <label for=\\\"fname\\\" class=\\\"col-sm-2 control-label\\\" style=\\\"color:white\\\">First Name <sup>*</sup></label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"firstname\\\" id=\\\"fname\\\" placeholder=\\\"First Name\\\">\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"registerForm.get('firstname').dirty && registerForm.get('firstname').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('firstname').errors.required\\\">\\n                    Please enter your first name\\n                </span>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('lastname').invalid && registerForm.get('lastname').dirty}\\\">\\n            <label for=\\\"lname\\\" class=\\\"col-sm-2 control-label\\\" style=\\\"color:white\\\">Last Name <sup>*</sup></label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-bold\\\"></i></div>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"lastname\\\" id=\\\"lname\\\" placeholder=\\\"Last Name\\\">\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"registerForm.get('lastname').dirty && registerForm.get('lastname').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('lastname').errors.required\\\">\\n                    Please enter your last name\\n                </span>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('email').invalid && registerForm.get('email').dirty}\\\">\\n            <label for=\\\"email\\\" class=\\\"col-sm-2 control-label\\\" style=\\\"color:white\\\">Email <sup>*</sup></label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\">@</div>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"email\\\" id=\\\"email\\\" placeholder=\\\"Email\\\">\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"registerForm.get('email').dirty && registerForm.get('email').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('email').invalid\\\">\\n                    Please enter a valid email\\n                </span>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('username').invalid && registerForm.get('username').dirty}\\\">\\n            <label for=\\\"username\\\" class=\\\"col-sm-2 control-label\\\" style=\\\"color:white\\\">Username <sup>*</sup></label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-user\\\"></i></div>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"username\\\" id=\\\"username\\\" placeholder=\\\"Username\\\">\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"registerForm.get('username').dirty && registerForm.get('username').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('username').errors.required\\\">\\n                    Please enter username\\n                </span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('username').errors.minlength\\\">\\n                    Username must be longer than 3 characters.\\n                </span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('username').errors.maxlength\\\">\\n                    Username cannot be longer than 16 characters.\\n                </span>\\n            </div>\\n        </div>\\n\\n         <div formGroupName=\\\"passwordGroup\\\" [ngClass]=\\\"{'has-error': registerForm.get('passwordGroup').errors }\\\">\\n\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('passwordGroup.password').invalid && registerForm.get('passwordGroup.password').dirty}\\\">\\n                <label for=\\\"password\\\" class=\\\"col-sm-2 control-label\\\" style=\\\"color:white\\\">Password <sup>*</sup></label>\\n                <div class=\\\"input-group col-sm-10\\\">\\n                    <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-asterisk\\\"></i></div>\\n                    <input type=\\\"password\\\" class=\\\"form-control\\\" [formControl]=\\\"password\\\" id=\\\"password\\\" placeholder=\\\"Pasword\\\">\\n                </div>\\n                <div class=\\\"text-danger\\\"  *ngIf=\\\"registerForm.get('passwordGroup.password').dirty && registerForm.get('passwordGroup.password').errors\\\">\\n                    <span class=\\\"col-sm-2\\\"></span>\\n                    <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('passwordGroup.password').errors.required\\\">\\n                        Please enter password\\n                    </span>\\n                    <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('passwordGroup.password').errors.pattern\\\">\\n                        Password must contain one letter, number & special characters\\n                    </span>\\n                </div>\\n\\n            </div>\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('passwordGroup.retypepass').invalid && registerForm.get('passwordGroup.retypepass').dirty}\\\">\\n                <label for=\\\"retypepass\\\" class=\\\"col-sm-2 control-label\\\" style=\\\"color:white\\\">Retype Password <sup>*</sup></label>\\n                <div class=\\\"input-group col-sm-10\\\">\\n                    <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-asterisk\\\"></i></div>\\n                    <input type=\\\"password\\\" class=\\\"form-control\\\" [formControl]=\\\"retypepass\\\" id=\\\"retypepass\\\" placeholder=\\\"Retype Password\\\">\\n                </div>\\n                <div class=\\\"text-danger\\\" *ngIf=\\\"(registerForm.get('passwordGroup.retypepass').touched || registerForm.get('passwordGroup.retypepass').dirty) && (registerForm.get('passwordGroup.retypepass').errors || registerForm.get('passwordGroup').errors)\\\">\\n                    <span class=\\\"col-sm-2\\\"></span>\\n                    <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('passwordGroup.retypepass').errors?.required\\\">\\n                        Please confirm your password\\n                    </span>\\n                    <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('passwordGroup').errors?.mismatchedPassword\\\">\\n                        Password do not match\\n                    </span>\\n                </div>\\n            </div>\\n\\n         </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\"></label>\\n            <div class=\\\"col-sm-5\\\">\\n                <button type=\\\"submit\\\" [disabled]=\\\"registerForm.invalid\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n                <button type=\\\"reset\\\" class=\\\"btn btn-default\\\">Reset</button>\\n            </div>\\n            <div class=\\\"col-sm-5\\\" style=\\\"text-align:right\\\">\\n                <sup>*</sup> required\\n            </div>\\n        </div>\\n    </form>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/user/register.component.html\n// module id = ../../../../../src/app/user/register.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from '../common/toastr.service'\nimport { UserService } from './user.service';\n\nfunction comparePassword(c: AbstractControl): {[key: string]: boolean} | null {\n    let passwordControl = c.get('password');\n    let confirmControl = c.get('retypepass');\n\n    if (passwordControl.pristine || confirmControl.pristine) {\n      return null;\n    }\n\n    if (passwordControl.value === confirmControl.value) {\n        return null;\n    }\n    return { 'mismatchedPassword': true };\n }\n\n@Component({\n  templateUrl: './register.component.html'\n})\n\nexport class RegisterComponent implements OnInit {\n\n  registerForm: FormGroup;\n\n  constructor(private fb: FormBuilder, \n    private userService: UserService,\n    private router: Router,\n    private toastr: ToastrService) {\n  }\n\n  firstname = new FormControl('', [Validators.required]);\n  lastname = new FormControl('', [Validators.required]);\n  email = new FormControl('', [Validators.email]);\n  username = new FormControl('', [Validators.required, Validators.minLength(4), Validators.maxLength(16)]);\n  password = new FormControl('', [Validators.required, Validators.pattern('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{6,12}$')]);\n  retypepass = new FormControl('', [Validators.required]);\n  \n\n  ngOnInit(): void {\n      this.registerForm = this.fb.group({\n      firstname: this.firstname,\n      lastname: this.lastname,\n      email: this.email,\n      username: this.username,\n      passwordGroup: this.fb.group({\n        password: this.password,\n        retypepass: this.retypepass,\n      }, {validator: comparePassword})\n    });\n  }\n\n  registerUser(formdata:any): void {\n    if (this.registerForm.dirty && this.registerForm.valid) {\n      let theForm = this.registerForm.value;\n      const thePass = this.registerForm.value.passwordGroup.password;\n      theForm.password = thePass;\n      delete theForm.passwordGroup;\n\n      this.userService.register(theForm)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.toastr.error(data.message);\n          } else {\n            this.toastr.success(data.message);\n            this.router.navigate(['login']);\n          }\n          this.registerForm.reset();\n      });\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/user/register.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule} from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { RegisterComponent } from './register.component';\nimport { ProfileComponent } from './profile.component';\nimport { PasswordComponent } from './password.component';\nimport { LogoutComponent } from './logout.component';\nimport { AuthGuard } from './auth-guard.service';\nimport { AuthService } from './auth.service';\nimport { UserService } from './user.service';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild([\n      { path: 'register', component: RegisterComponent },\n      { path: 'profile', canActivate: [ AuthGuard], component: ProfileComponent },\n      { path: 'password', canActivate: [ AuthGuard], component: PasswordComponent },\n      { path: 'logout', canActivate: [ AuthGuard], component: LogoutComponent }\n    ])\n  ],\n  declarations: [\n    RegisterComponent,\n    ProfileComponent,\n    PasswordComponent,\n    LogoutComponent\n  ],\n  providers: [\n    AuthService,\n    AuthGuard,\n    UserService\n  ]\n})\nexport class UserModule {}\n\n\n// WEBPACK FOOTER //\n// /Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/user/user.module.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions} from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/throw';\n\n@Injectable()\nexport class UserService {\n\n    public jwtToken: string;\n\n    constructor(private http: Http) {\n        const theUser:any = JSON.parse(localStorage.getItem('currentUser'));\n        if (theUser) {\n            this.jwtToken = theUser.token;\n        }\n    }\n\n    register(oUser) {\n        let headers = new Headers ({ 'Content-Type': 'application/json'});\n        let options = new RequestOptions({headers: headers});\n         //CHANGE IN DEVELOPMENT MODE TO LOCALHOST !!!!!\n        // return this.http.post('http://localhost:1978/register', JSON.stringify(oUser), options)\n      return this.http.post('/register', JSON.stringify(oUser), options)\n            .map((response: Response) => response.json())\n            .catch(this.handleError);\n    }\n\n    getUser(userid) {\n        let headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Authorization', `${this.jwtToken}`);\n        let options = new RequestOptions({ headers: headers });\n\n        // return this.http.get(`http://localhost:1978/api/user/${userid}`, options)\n      return this.http.get(`/api/user/${userid}`, options)\n            .map((response: Response) => response.json())\n            .catch(this.handleError);\n    }\n\n    updateUser(userid, oUser){\n        let headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Authorization', `${this.jwtToken}`);\n        let options = new RequestOptions({ headers: headers });\n\n        // return this.http.put(`http://localhost:1978/api/user/${userid}`, JSON.stringify(oUser), options)\n        return this.http.put(`/api/user/${userid}`, JSON.stringify(oUser), options)\n            .map((response: Response) => response.json())\n            .catch(this.handleError);\n    }\n\n    updatePassword(userid, oUser){\n        let headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Authorization', `${this.jwtToken}`);\n        let options = new RequestOptions({ headers: headers });\n\n        // return this.http.put(`http://localhost:1978/api/password/${userid}`, JSON.stringify(oUser), options)\n      return this.http.put(`/api/password/${userid}`, JSON.stringify(oUser), options)\n            .map((response: Response) => response.json())\n            .catch(this.handleError);\n    }\n\n     private handleError(error: Response) {\n        console.error(error);\n        return Observable.throw(error.json().error || 'Server error');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/app/user/user.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /Users/ramanathmadiwal/Desktop/Learning/OfficialWebsite/MEANAppprod/expenseWatch/src/main.ts"],"sourceRoot":"webpack:///"}